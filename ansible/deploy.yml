--- # Install shakenfist on a series of Ubuntu machines
- hosts: localhost
  gather_facts: yes
  connection: ssh
  vars_files:
    - vars

  tasks:
    - name: Deploy infrastructure
      terraform:
        project_path: ./tf
        state: present
        force_init: true
        variables:
          project: "{{project}}"
      register: terraform_out

    - name: Add DB node to ansible
      add_host:
        hostname: sfdb
        ansible_ssh_host: "{{terraform_out.outputs.sfdb_external.value[0]}}"
        groups: db

    - name: Add DB node_ip
      set_fact:
        node_ip: "{{terraform_out.outputs.sfdb_internal.value[0]}}"
        db_node_ip: "{{terraform_out.outputs.sfdb_internal.value[0]}}"
      delegate_to: sfdb
      delegate_facts: true

    - name: Add sf-1 to ansible
      add_host:
        hostname: sf-1
        ansible_ssh_host: "{{terraform_out.outputs.sf_1_external.value[0]}}"
        groups: hypervisors

    - name: Add DB sf-1 node_ip
      set_fact:
        node_ip: "{{terraform_out.outputs.sf_1_internal.value[0]}}"
      delegate_to: sf-1
      delegate_facts: true

    - name: Add sf-2 to ansible
      add_host:
        hostname: sf-2
        ansible_ssh_host: "{{terraform_out.outputs.sf_2_external.value[0]}}"
        groups: hypervisors

    - name: Add DB sf-2 node_ip
      set_fact:
        node_ip: "{{terraform_out.outputs.sf_2_internal.value[0]}}"
      delegate_to: sf-2
      delegate_facts: true

    - name: Log terraform hosts
      debug:
        msg:
          - "db: {{hostvars['sfdb']['ansible_ssh_host']}}, {{hostvars['sfdb']['node_ip']}}"
          - "sf-1: {{hostvars['sf-1']['ansible_ssh_host']}}, {{hostvars['sf-1']['node_ip']}}"
          - "sf-2: {{hostvars['sf-2']['ansible_ssh_host']}}, {{hostvars['sf-2']['node_ip']}}"

- hosts: allsf
  become: yes
  become_method: sudo
  gather_facts: yes
  connection: ssh
  vars_files:
    - vars

  tasks:
    - include: includes/debian.yml
    - include: includes/python3.yml
    - include: includes/docker.yml

    - name: install mariadb client
      apt:
        name: ["mariadb-client"]
        state: latest

    - name: Make /srv/shakenfist/
      file:
        path: /srv/shakenfist
        state: directory
        mode: "0755"

    - name: Copy shakenfist
      synchronize:
        src: ../../.
        dest: /srv/shakenfist/src/

    - name: Install shakenfist
      command: pip3 install -e .
      args:
        chdir: /srv/shakenfist/src

    - name: Create config directory
      file:
        path: /etc/sf
        state: directory
        mode: "0755"

    - name: Determine default interface
      shell: ip route list default | head -1 | cut -f 5 -d " "
      register: node_egress_nic_complex
      when: node_egress_nic is not defined

    - name: Extract node default interface
      set_fact:
        node_egress_nic: "{{node_egress_nic_complex.stdout}}"
      when: node_egress_nic is not defined

    - name: Write sfrc file
      template:
        src: files/sfrc
        dest: /etc/sf/sfrc
        owner: root
        group: sudo
        mode: u=rwx,g=rwx,o=

- hosts: db
  become: yes
  become_method: sudo
  gather_facts: no
  connection: ssh
  vars_files:
    - vars

  tasks:
    - name: Test if we have a database
      shell: docker inspect sfdb
      ignore_errors: True
      register: has_sfdb

    - name: Ensure mariadb is started
      shell: docker start sfdb
      when: has_sfdb.rc == 0

    - name: Wait docker python package to be available
      pause:
        minutes: 1
      when: has_sfdb.rc == 1

    - name: Create mariadb docker container
      docker_container:
        name: sfdb
        image: mariadb
        restart_policy: always
        env:
          MYSQL_ROOT_PASSWORD: "{{db_root_password}}"
          MYSQL_DATABASE: "sf"
          MYSQL_USER: "sf"
          MYSQL_PASSWORD: "{{db_user_password}}"
        volumes:
          - /srv/shakenfist/mysql:/var/lib/mysql
        ports:
          - 3306:3306
      when: has_sfdb.rc == 1

    - name: Wait for mariabdb to be listening
      pause:
        minutes: 1
      when: has_sfdb.rc == 1

    - name: Upgrade database schema
      command: alembic upgrade head
      args:
        chdir: /srv/shakenfist/src/shakenfist
      environment:
        SHAKENFIST_NODE_IP: "{{node_ip}}"
        SHAKENFIST_DB_ROOT_PASSWORD: "{{db_root_password}}"
        SHAKENFIST_DB_PASSWORD: "{{db_user_password}}"
        SHAKENFIST_SQL_URL: "mysql://sf:{{db_user_password}}@{{node_ip}}/sf"

- hosts: hypervisors
  become: yes
  become_method: sudo
  gather_facts: no
  connection: ssh
  vars_files:
    - vars

  tasks:
    - name: Create storage directory
      file:
        path: /srv/shakenfist/mariadb
        state: directory
        mode: "0755"

    - name: Copy libvirt template
      copy:
        src: files/libvirt.tmpl
        dest: /srv/shakenfist/libvirt.tmpl
        owner: root
        group: root
        mode: "0644"

    - name: Copy dhcp template
      copy:
        src: files/dhcp.tmpl
        dest: /srv/shakenfist/dhcp.tmpl
        owner: root
        group: root
        mode: "0644"

    - name: Determine node IP
      shell: /usr/bin/dig @resolver1.opendns.com ANY myip.opendns.com +short
      register: node_ip_complex
      when: node_ip is not defined

    - name: Extract node IP
      set_fact:
        node_ip: "{{node_ip_complex.stdout}}"
      when: node_ip is not defined

    - name: Write systemd unit
      template:
        src: files/sf.service
        dest: /lib/systemd/system
        owner: root
        group: root
        mode: u=r,g=r,o=r

    - name: Start the SF daemon
      service:
        name: sf
        enabled: yes
        state: restarted
